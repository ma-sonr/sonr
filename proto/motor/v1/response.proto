syntax = "proto3";

// Package Motor is used for defining a Motor node and its properties.
package sonrio.motor.api.v1;

import "bucket/bucket.proto";
import "bucket/where_is.proto";
import "common/v1/info.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "registry/did.proto";
import "registry/who_is.proto";
import "schema/v1/schema.proto";
import "schema/v1/what_is.proto";

option go_package = "github.com/sonr-io/sonr/third_party/types/motor/api/v1";
option java_multiple_files = true;
option java_package = "io.sonr.types.motor";

message InitializeResponse {
  bool success = 1;
  repeated sonrio.sonr.schema.SchemaDefinition definitions = 2;
}

message CreateAccountResponse {
  string address = 1;
  sonrio.sonr.registry.WhoIs who_is = 2;
}

message CreateAccountWithKeysResponse {
  string address = 1;
  bytes aes_psk_key = 2;
  sonrio.sonr.registry.WhoIs who_is = 3;
}

message LoginResponse {
  bool success = 1;
  sonrio.sonr.registry.WhoIs who_is = 2;
}

message CreateSchemaResponse {
  int32 status = 1;
  sonrio.sonr.schema.WhatIs what_is = 2;
  sonrio.sonr.schema.SchemaDefinition schema_definition = 3;
}

message QueryResponse {
  int32 code = 1;
  string query = 2;
  common.v1.BlockchainModule module = 3;
  repeated QueryResultItem results = 4;
}

message QueryResultItem {
  string did = 1;
  common.v1.EntityKind kind = 2;
  sonrio.sonr.registry.WhoIs who_is = 3; //optional
  sonrio.sonr.schema.WhatIs what_is = 4; //optional
  sonrio.sonr.schema.SchemaDefinition schema_definition = 5; //optional
  sonrio.sonr.bucket.WhereIs where_is = 6; //optional
  repeated sonrio.sonr.bucket.WhereIs where_is_list = 7; //optional
}

message QueryWhoIsResponse {
  int32 code = 1;
  sonrio.sonr.registry.WhoIs who_is = 2;
}

message QueryWhatIsResponse {
  int32 code = 1;
  sonrio.sonr.schema.WhatIs what_is = 2;
  sonrio.sonr.schema.SchemaDefinition schema = 3;
}

message QueryWhatIsByCreatorResponse {
  int32 code = 1;
  repeated sonrio.sonr.schema.WhatIs what_is = 2;
  map<string, sonrio.sonr.schema.SchemaDefinition> schemas = 3;
  cosmos.base.query.v1beta1.PageResponse pagination = 4;
}

message QueryWhereIsByCreatorResponse {
  int32 code = 1;
  repeated sonrio.sonr.bucket.WhereIs where_is = 2;
  cosmos.base.query.v1beta1.PageResponse pagination = 3;
}

message ObjectReference {
  string did = 1;
  string label = 2;
  string cid = 3;
}

message UploadObjectResponse {
  int32 code = 1;
  ObjectReference reference = 2;
  string message = 3;
}

message CreateBucketResponse {
  string did = 1;
  sonrio.sonr.bucket.WhereIs where_is = 2;
}

message UpdateBucketResponse {
  int32 status = 1;
  sonrio.sonr.bucket.WhereIs where_is = 2;
}

message QueryWhereIsResponse {
  int32 code = 1;
  sonrio.sonr.bucket.WhereIs where_is = 2;
}

message BucketContentList {
  repeated sonrio.sonr.bucket.BucketContent buckets = 1;
}

message StatResponse {
  string address = 1;
  sonrio.sonr.registry.DIDDocument did_document = 2;
  int32 balance = 3;
  int32 stake = 4;
}

message PaymentResponse {
  int32 code = 1;
  string message = 2;
  string tx_hash = 3;
  int32 updated_balance = 4;
}

message SearchBucketContentBySchemaResponse {
  int32 status = 1;
  string bucket_did = 2;
  string schema_did = 3;
  repeated bytes content = 4;
}

message SearchResponse {
  int32 status = 1;
  string resource_did = 2;
  string content_did = 3;
  repeated bytes content = 4;
}

message UploadDocumentResponse {
  int32 status = 1;
  string did = 2;
  string cid = 3;
  sonrio.sonr.schema.SchemaDocument document = 4;
}

message GetDocumentResponse {
  int32 status = 1;
  string did = 2;
  string cid = 3;
  sonrio.sonr.schema.SchemaDocument document = 4;
}
